(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./node_modules/ergo-lib-wasm-browser sync recursive":
/*!*************************************************!*\
  !*** ./node_modules/ergo-lib-wasm-browser sync ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"./node_modules/ergo-lib-wasm-browser sync recursive\";\n\n//# sourceURL=webpack:///./node_modules/ergo-lib-wasm-browser_sync?");

/***/ }),

/***/ "./src/ergo-related/explorer.js":
/*!**************************************!*\
  !*** ./src/ergo-related/explorer.js ***!
  \**************************************/
/*! exports provided: trueAddress, explorerApi, explorerV1Api, currentHeight, unspentBoxesFor, boxById, txById, getSpendingTx, getUnconfirmedTxsFor, getTokenBox, getBalanceFor, getBoxesForAdress, getSenderAddress */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"trueAddress\", function() { return trueAddress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"explorerApi\", function() { return explorerApi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"explorerV1Api\", function() { return explorerV1Api; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"currentHeight\", function() { return currentHeight; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"unspentBoxesFor\", function() { return unspentBoxesFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"boxById\", function() { return boxById; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"txById\", function() { return txById; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSpendingTx\", function() { return getSpendingTx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getUnconfirmedTxsFor\", function() { return getUnconfirmedTxsFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTokenBox\", function() { return getTokenBox; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBalanceFor\", function() { return getBalanceFor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getBoxesForAdress\", function() { return getBoxesForAdress; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getSenderAddress\", function() { return getSenderAddress; });\n/* harmony import */ var _rest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rest */ \"./src/ergo-related/rest.js\");\n\r\n\r\nconst trueAddress = '4MQyML64GnzMxZgm'; // dummy address to get unsigned tx from node, we only care about the boxes though in this case\r\nconst explorerApi = 'https://api.ergoplatform.com/api/v0';\r\nconst explorerV1Api = 'https://api.ergoplatform.com/api/v1';\r\n\r\nasync function getRequest(url) {\r\n    return Object(_rest__WEBPACK_IMPORTED_MODULE_0__[\"get\"])(explorerApi + url).then(res => {\r\n        return { data: res };\r\n    });\r\n}\r\n\r\nasync function getRequestV1(url) {\r\n    return Object(_rest__WEBPACK_IMPORTED_MODULE_0__[\"get\"])(explorerV1Api + url).then(res => {\r\n        return { data: res };\r\n    });\r\n}\r\n\r\nasync function currentHeight() {\r\n    return getRequest('/blocks?limit=1')\r\n        .then(res => res.data)\r\n        .then(res => res.items[0].height);\r\n}\r\n\r\nfunction unspentBoxesFor(address) {\r\n    return getRequest(`/transactions/boxes/byAddress/unspent/${address}`).then(\r\n        (res) => res.data\r\n    );\r\n}\r\n\r\nfunction boxById(id) {\r\n    return getRequest(`/transactions/boxes/${id}`).then((res) => res.data);\r\n}\r\n\r\nfunction txById(id) {\r\n    return getRequest(`/transactions/${id}`).then((res) => res.data);\r\n}\r\n\r\nasync function getSpendingTx(boxId) {\r\n    const data = getRequest(`/transactions/boxes/${boxId}`);\r\n    return data\r\n        .then((res) => res.data)\r\n        .then((res) => res.spentTransactionId)\r\n        .catch((_) => null);\r\n}\r\n\r\nfunction getUnconfirmedTxsFor(addr) {\r\n    return getRequest(\r\n        `/transactions/unconfirmed/byAddress/${addr}`\r\n    )\r\n        .then((res) => res.data)\r\n        .then((res) => res.items);\r\n}\r\n\r\nfunction getTokenBox(addr) {\r\n    return getRequest(\r\n        `/assets/${addr}/issuingBox`\r\n    )\r\n        .then((res) => res.data[0])\r\n}\r\n\r\nfunction getBalanceFor(addr, token = null) {\r\n    return getRequest(\r\n        `/addresses/${addr}`\r\n    )\r\n        .then((res) => res.data)\r\n        .then((res) => res.transactions)\r\n        .then(res => {\r\n            if (!token) return res.confirmedBalance;\r\n            let tok = res.confirmedTokensBalance.filter(tok => tok.tokenId === token);\r\n            if (tok.length === 0) return 0;\r\n            else return tok[0].amount;\r\n        });\r\n}\r\n\r\nasync function getBoxesForAdress(addr) {\r\n    return getRequestV1(\r\n        `/boxes/byAddress/${addr}`\r\n    ).then(res => res.data.items);\r\n\r\n}\r\n\r\nasync function getSenderAddress(txId) {\r\n    return getRequestV1(\r\n      `/transactions/${txId}`\r\n  ).then(res => res.data.inputs[0].address);\r\n}\r\n\n\n//# sourceURL=webpack:///./src/ergo-related/explorer.js?");

/***/ }),

/***/ "./src/ergo-related/rest.js":
/*!**********************************!*\
  !*** ./src/ergo-related/rest.js ***!
  \**********************************/
/*! exports provided: post, get */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"post\", function() { return post; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get\", function() { return get; });\nasync function post(url, body = {}, apiKey = '') {\r\n    return await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            api_key: apiKey,\r\n        },\r\n        body: JSON.stringify(body),\r\n    });\r\n}\r\nasync function get(url, apiKey = '') {\r\n    return await fetch(url, {\r\n        headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            api_key: apiKey,\r\n        },\r\n    }).then(res => res.json());\r\n}\r\n\n\n//# sourceURL=webpack:///./src/ergo-related/rest.js?");

/***/ }),

/***/ "./src/ergo-related/serializer.js":
/*!****************************************!*\
  !*** ./src/ergo-related/serializer.js ***!
  \****************************************/
/*! exports provided: encodeNum, decodeNum, encodeHex, encodeStr, decodeString, ergToNano */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Buffer) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeNum\", function() { return encodeNum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeNum\", function() { return decodeNum; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeHex\", function() { return encodeHex; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"encodeStr\", function() { return encodeStr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"decodeString\", function() { return decodeString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ergToNano\", function() { return ergToNano; });\n/* harmony import */ var _coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @coinbarn/ergo-ts */ \"./node_modules/@coinbarn/ergo-ts/dist/index.js\");\n/* harmony import */ var _coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nlet ergolib = Promise.resolve(/*! import() */).then(__webpack_require__.bind(null, /*! ergo-lib-wasm-browser */ \"./node_modules/ergo-lib-wasm-browser/ergo_lib_wasm.js\"))\r\n\r\nasync function encodeNum(n, isInt = false) {\r\n    if (isInt) return (await ergolib).Constant.from_i32(n).encode_to_base16()\r\n    else return (await ergolib).Constant.from_i64((await ergolib).I64.from_str(n)).encode_to_base16()\r\n}\r\n\r\nasync function decodeNum(n, isInt = false) {\r\n    if (isInt) return (await ergolib).Constant.decode_from_base16(n).to_i32()\r\n    else return (await ergolib).Constant.decode_from_base16(n).to_i64().to_str()\r\n\r\n}\r\n\r\nasync function encodeHex(reg) {\r\n    return (await ergolib).Constant.from_byte_array(Buffer.from(reg, 'hex')).encode_to_base16()\r\n}\r\n\r\nasync function encodeStr(str) {\r\n    return encodeHex(_coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__[\"Serializer\"].stringToHex(str))\r\n}\r\n\r\nfunction toHexString(byteArray) {\r\n    return Array.from(byteArray, function(byte) {\r\n        return ('0' + (byte & 0xFF).toString(16)).slice(-2);\r\n    }).join('')\r\n}\r\n\r\nasync function decodeString(encoded) {\r\n    return _coinbarn_ergo_ts__WEBPACK_IMPORTED_MODULE_0__[\"Serializer\"].stringFromHex(toHexString((await ergolib).Constant.decode_from_base16(encoded).to_byte_array()))\r\n}\r\n\r\nfunction ergToNano(erg) {\r\n    if (erg === undefined) return 0\r\n    if (erg.startsWith('.')) return parseInt(erg.slice(1) + '0'.repeat(9 - erg.length + 1))\r\n    let parts = erg.split('.')\r\n    if (parts.length === 1) parts.push('')\r\n    if (parts[1].length > 9) return 0\r\n    return parseInt(parts[0] + parts[1] + '0'.repeat(9 - parts[1].length))\r\n}\r\n\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///./src/ergo-related/serializer.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: formatTokenAmount, formatLongString */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatTokenAmount\", function() { return formatTokenAmount; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"formatLongString\", function() { return formatLongString; });\n/* harmony import */ var ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ergo-lib-wasm-browser */ \"./node_modules/ergo-lib-wasm-browser/ergo_lib_wasm.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! json-bigint */ \"./node_modules/json-bigint/index.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(json_bigint__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _parseUtils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./parseUtils */ \"./src/parseUtils.js\");\n/* harmony import */ var _ergo_related_serializer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ergo-related/serializer */ \"./src/ergo-related/serializer.js\");\n/* harmony import */ var _ergo_related_explorer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ergo-related/explorer */ \"./src/ergo-related/explorer.js\");\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! sweetalert2 */ \"./node_modules/sweetalert2/dist/sweetalert2.all.js\");\n/* harmony import */ var sweetalert2__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(sweetalert2__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var text_decoding__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! text-decoding */ \"./node_modules/text-decoding/src/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst NANOERG_TO_ERG = 1000000000;\r\nconst MIN_ERG_BOX_VALUE = 0.001 * NANOERG_TO_ERG;\r\nconst SIGUSD_TOKENID = \"03faf2cb329f2e90d6d23b58d91bbb6c046aa143261cc21f52fbe2824bfcbf04\";\r\n// const MIN_ERG_FEE = 0.001;\r\n// const MIN_FEE_SIGUSD = 0.01;\r\n// const FEE_PERCENT = 0.001; // 0.1%\r\nconst MIN_ERG_FEE = 0.001;\r\nconst MIN_FEE_SIGUSD = 0;\r\nconst FEE_PERCENT = 0;\r\nconst PP_REF = \"Ergo Payment Portal\"; // stored in R5 register to identify the box of this dApp\r\nconst feeAddress = \"9hDPCYffeTEAcShngRGNMJsWddCUQLpNzAqwM9hQyx2w6qubmab\";\r\n\r\nasync function setStatus(msg, type) {\r\n    const status = document.getElementById(\"status\");\r\n    status.innerHTML = msg;\r\n    status.className = \"alert alert-\" + type;\r\n}\r\n\r\nasync function logErrorStatus(e, msg) {\r\n    const s = msg + `: ${JSON.stringify(e)}`;\r\n    console.error(s, e);\r\n    setStatus(s, \"danger\");\r\n}\r\n\r\nfunction computeFee(currency, amount) {\r\n    // Compute dApp fee taken paid by the seller\r\n    var minFee = MIN_ERG_FEE; // min Erg fee\r\n    if (currency == 'SIGUSD') {\r\n        minFee = MIN_FEE_SIGUSD; // min SIGUSD fee\r\n    };\r\n    var feeFloat = minFee;\r\n    if (feeFloat < amount * FEE_PERCENT) { // 0.1%\r\n        feeFloat = amount * FEE_PERCENT;\r\n    };\r\n    return feeFloat;\r\n}\r\n\r\nfunction triggerWaitAlert(msg, html) {\r\n    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire({\r\n        title: msg,\r\n        html: html,\r\n        allowOutsideClick: true,\r\n        showConfirmButton: false,\r\n        imageUrl: '../resources/Spin-1.5s-94px.svg',\r\n        onBeforeOpen: () => {\r\n            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.showLoading()\r\n        },\r\n    });\r\n}\r\n\r\nasync function connectErgoWallet(ergAddress, currency, amount, ref) {\r\n    triggerWaitAlert(\"Connection to Yoroi wallet...\");\r\n\r\n    ergo_request_read_access().then(function (access_granted) {\r\n        const connectWalletButton = document.getElementById(\"connect-wallet\");\r\n        if (!access_granted) {\r\n            console.log(\"ergo access refused\");\r\n            setStatus(\"Wallet access denied\", \"warning\")\r\n            connectWalletButton.onclick = connectErgoWallet;\r\n        } else {\r\n            console.log(\"ergo access given\");\r\n            setStatus(\"Wallet connected\", \"secondary\");\r\n            triggerWaitAlert(\"Retrieving \" + currency + \" balance...\");\r\n\r\n            if (currency == \"ERG\") {\r\n                ergo.get_balance().then(async function (result) {\r\n                    const walletAmount = parseFloat(parseFloat(result) / parseFloat(NANOERG_TO_ERG)).toFixed(3);\r\n                    connectWalletButton.innerText = \"Balance: \" + walletAmount + \" ERG\";\r\n                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\r\n                });\r\n            } else {\r\n                ergo.get_utxos(\"1000000000000\", SIGUSD_TOKENID).then(async function (result) {\r\n                    var amountUSD = 0;\r\n                    for (var i in result) {\r\n                        for (var j in result[i].assets) {\r\n                            if (result[i].assets[j].tokenId == SIGUSD_TOKENID) {\r\n                                amountUSD += parseInt(result[i].assets[j].amount);\r\n                            }\r\n                        }\r\n                    }\r\n                    const walletAmount = parseFloat(parseFloat(amountUSD) / parseFloat(100)).toFixed(2);\r\n                    connectWalletButton.innerText = \"Balance: \" + walletAmount + \" SigUSD\";\r\n                    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\r\n                });\r\n            };\r\n        };\r\n    });\r\n}\r\n\r\nfunction getAmountFloat(currency, amountStr) {\r\n    try {\r\n        const amountFloat = parseFloat(amountStr);\r\n    } catch (e) {\r\n        logErrorStatus(e, \"Invalid Amount\");\r\n        return null;\r\n    };\r\n    const amountFloat = parseFloat(amountStr);\r\n    if ((amountFloat <= 0.0999 && currency == 'ERG') || (amountFloat <= 0.999 && currency == 'SIGUSD')) {\r\n        setStatus(\"Amount too small, mininum 0.1 ERG or 1 SIGUSD\", \"danger\");\r\n        return null;\r\n    }\r\n    return amountFloat;\r\n}\r\n\r\nfunction copyURL() {\r\n    /* Get the text field */\r\n    var copyText = document.getElementById(\"payment-url\");\r\n    copyText.select();\r\n    copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n    navigator.clipboard.writeText(copyText.value);\r\n    copyText.onclick = null;\r\n    sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire({\r\n        icon: 'success',\r\n        title: 'Payment URL copied to clipboard',\r\n        timer: 1000,\r\n        showConfirmButton: false\r\n    });\r\n\r\n}\r\n\r\nasync function generatePaymentURL(event) {\r\n    // prevent submit\r\n    event.preventDefault(event);\r\n    const tokenForm = document.getElementById(\"token-form\");\r\n    // run the form validation\r\n    tokenForm.reportValidity();\r\n    if (!tokenForm.checkValidity()) {\r\n        console.log(\"validation error\");\r\n        return false;\r\n    };\r\n    var generatedURL = window.location.protocol + '//' + window.location.host + \"/pay.html?\";\r\n    const address = document.getElementById(\"address\").value;\r\n    if (address.length != 51 && address.charAt(0) != '9') {\r\n        setStatus(\"Invalid ERG address\", \"danger\");\r\n        return null;\r\n    };\r\n    generatedURL += \"address=\" + address;\r\n    const currency = document.querySelector('input[name=\"currency\"]:checked').value;\r\n    generatedURL += \"&currency=\" + currency;\r\n    const amount = document.getElementById(\"amount\").value;\r\n    const amountFloat = getAmountFloat(currency, amount);\r\n    if (amountFloat == null || amountFloat == undefined) {\r\n        return null;\r\n    };\r\n    generatedURL += \"&amount=\" + amount;\r\n    const ref = document.getElementById(\"ref\").value;\r\n    if (ref != null && ref != \"\") {\r\n        generatedURL += \"&ref=\" + encodeURIComponent(ref);\r\n    }\r\n    var paymentURLElem = document.getElementById(\"payment-url\");\r\n    paymentURLElem.value = generatedURL;\r\n    paymentURLElem.onclick = copyURL;\r\n    const fee = computeFee(currency, amountFloat);\r\n    document.getElementById(\"fee\").value = fee.toString() + \" \" + currency;\r\n    var QRCode = __webpack_require__(/*! qrcode */ \"./node_modules/qrcode/lib/browser.js\")\r\n    var canvas = document.getElementById('canvas')\r\n    QRCode.toCanvas(canvas, generatedURL, function (error) {\r\n        if (error) console.error(error)\r\n        console.log('success!');\r\n    });\r\n    var res = document.getElementsByClassName(\"result\");\r\n    for (var i in res) {\r\n        res[i].removeAttribute(\"hidden\");\r\n    };\r\n\r\n    setStatus(\"Payment URL generated for address \" + address, \"secondary\");\r\n}\r\n\r\nasync function loadVoucherPage(ergAddress) {\r\n    const boxes = await Object(_ergo_related_explorer__WEBPACK_IMPORTED_MODULE_4__[\"getBoxesForAdress\"])(ergAddress);\r\n    const container = document.getElementById(\"container\");\r\n    const csvArea = document.getElementById(\"csvArea\");\r\n    const jsonArea = document.getElementById(\"jsonArea\");\r\n    var csv = '\"Payment reference\",\"Amount ERG\",\"Amount SigUSD\",\"Sender address\"\\n';\r\n    var jSonList = [];\r\n\r\n    if (boxes.length > 0) {\r\n        const voucherList = await extractVoucherList(boxes);\r\n\r\n        for (var i in voucherList) {\r\n            var html_row = \"<td><h5 class=\\\"payment-ref\\\">\" + voucherList[i][0] + \"</h5></td>\";\r\n            html_row += \"<td><h5 class=\\\"amount-erg\\\">\" + voucherList[i][1] + \"</h5></td>\";\r\n            html_row += \"<td><h5 class=\\\"amount-sigusd\\\">\" + formatTokenAmount(voucherList[i][2], 2) + \"</h5></td>\";\r\n            html_row += \"<td><h5 class=\\\"sender-address\\\">\" + formatLongString(voucherList[i][3], 10) + \"</h5></td>\";\r\n            var e = document.createElement('tr');\r\n            e.innerHTML = html_row;\r\n            container.appendChild(e);\r\n            csv += '\"' + voucherList[i].join('\",\"') + '\"\\n';\r\n            var myJson = {};\r\n            myJson[\"ref\"] = voucherList[i][0];\r\n            myJson[\"amountERG\"] = voucherList[i][1];\r\n            myJson[\"amountSIGUSD\"] = (parseFloat(voucherList[i][2]) / 100).toFixed(2);\r\n            myJson[\"senderAddress\"] = voucherList[i][3];\r\n            jSonList.push(myJson);\r\n        }\r\n        csvArea.value = csv;\r\n        jsonArea.value = JSON.stringify(jSonList, null, 2);\r\n    }\r\n}\r\n\r\nasync function extractVoucherList(boxes) {\r\n    var voucherList = [];\r\n    for (var i in boxes) {\r\n        if (\"R4\" in boxes[i].additionalRegisters\r\n            && \"R5\" in boxes[i].additionalRegisters) {\r\n            if (boxes[i].additionalRegisters.R4.sigmaType == 'Coll[SByte]'\r\n                && boxes[i].additionalRegisters.R5.sigmaType == 'Coll[SByte]') {\r\n                const appRef = await Object(_ergo_related_serializer__WEBPACK_IMPORTED_MODULE_3__[\"decodeString\"])(boxes[i].additionalRegisters.R5.serializedValue);\r\n                if (appRef == PP_REF) {\r\n                    const txId = boxes[i].transactionId;\r\n                    const senderAddress = await Object(_ergo_related_explorer__WEBPACK_IMPORTED_MODULE_4__[\"getSenderAddress\"])(txId);\r\n                    const paymentRef = await Object(_ergo_related_serializer__WEBPACK_IMPORTED_MODULE_3__[\"decodeString\"])(boxes[i].additionalRegisters.R4.serializedValue);\r\n                    const amountERG = (parseInt(boxes[i].value) / NANOERG_TO_ERG).toFixed(4);\r\n                    var amountSIGUSD = 0;\r\n                    for (var j in boxes[i].assets) {\r\n                        if (boxes[i].assets[j].tokenId == SIGUSD_TOKENID) {\r\n                            amountSIGUSD += boxes[i].assets[j].amount;\r\n                        }\r\n                    }\r\n                    voucherList.push([paymentRef, amountERG, amountSIGUSD, senderAddress]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return voucherList;\r\n}\r\n\r\nfunction loadPaymentPage(ergAddress, currency, amount, ref) {\r\n    const addressElem = document.getElementById(\"address\");\r\n    addressElem.value = ergAddress;\r\n    const assetElem = document.getElementById(\"asset-label\");\r\n    assetElem.innerText = currency.toUpperCase();\r\n    const amountElem = document.getElementById(\"amount\");\r\n    amountElem.value = amount;\r\n    const refElem = document.getElementById(\"ref\");\r\n    refElem.value = ref;\r\n    const sendButton = document.getElementById(\"send-transaction\");\r\n    sendButton.onclick = sendTransaction;\r\n}\r\n\r\nasync function sendTransaction() {\r\n    triggerWaitAlert(\"Getting inputs for the transaction...\");\r\n    const creationHeight = await Object(_ergo_related_explorer__WEBPACK_IMPORTED_MODULE_4__[\"currentHeight\"])();\r\n    const address = document.getElementById(\"address\").value;\r\n    const currency = document.getElementById(\"asset-label\").innerText.toUpperCase();\r\n    const amountFloat = parseFloat(document.getElementById(\"amount\").value);\r\n    const ref = document.getElementById(\"ref\").value;\r\n    const changeAddress = await ergo.get_change_address();\r\n\r\n    const feeFloat = computeFee(currency, amountFloat);\r\n    //console.log(\"inputs:\", address, currency, amountFloat, ref, feeFloat);\r\n\r\n    // Prepare total ergs and/or SIGUSD to send\r\n    var globalNanoErgsToSendInt = BigInt(Math.round(amountFloat * NANOERG_TO_ERG));\r\n    var tokens = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Tokens\"]();\r\n    if (currency == 'SIGUSD') {\r\n        if (feeFloat > 0) {\r\n            globalNanoErgsToSendInt = BigInt(2 * MIN_ERG_BOX_VALUE);\r\n        } else {\r\n            globalNanoErgsToSendInt = BigInt(MIN_ERG_BOX_VALUE);\r\n        };\r\n        tokens.add(new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Token\"](\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenId\"].from_str(SIGUSD_TOKENID),\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenAmount\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(Math.round((amountFloat * 100)).toString()))\r\n        ));\r\n    };\r\n\r\n    // Get the input boxes from the connected wallet\r\n    const utxos = await getAllUtxos();\r\n    const selector = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"SimpleBoxSelector\"]();\r\n    const globalNanoErgsToSend = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(globalNanoErgsToSendInt.toString()));\r\n    let boxSelection = {};\r\n    try {\r\n        boxSelection = selector.select(\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxes\"].from_boxes_json(utxos),\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(globalNanoErgsToSend.as_i64().checked_add(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE().as_i64())),\r\n            tokens);\r\n    } catch (e) {\r\n        let msg = \"[Wallet] Error: \"\r\n        if (JSON.stringify(e).includes(\"BoxValue out of bounds\")) {\r\n            msg = msg + \"Increase the Erg amount to process the transaction. \"\r\n        }\r\n        logErrorStatus(e, msg);\r\n        sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\r\n        return null;\r\n    }\r\n    //console.log('boxSelection: ', boxSelection.boxes().len());\r\n\r\n    // Prepare the output boxes\r\n    const outputCandidates = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidates\"].empty();\r\n\r\n    // Build the seller output box\r\n    var ergsStr = Math.round((amountFloat - feeFloat) * NANOERG_TO_ERG).toString();\r\n    var ergsAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(ergsStr));\r\n    var sellerTokenAmount = 0;\r\n    if (currency == 'SIGUSD') {\r\n        ergsAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(MIN_ERG_BOX_VALUE.toString()));\r\n    };\r\n    //console.log('ergsStr', ergsStr);\r\n    const sellerBoxBuilder = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidateBuilder\"](\r\n        ergsAmountBoxValue,\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Contract\"].pay_to_address(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(address)),\r\n        creationHeight);\r\n    if (currency == 'SIGUSD') {\r\n        sellerTokenAmount = Math.round((amountFloat - feeFloat) * 100);\r\n        sellerBoxBuilder.add_token(\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenId\"].from_str(\"03faf2cb329f2e90d6d23b58d91bbb6c046aa143261cc21f52fbe2824bfcbf04\"),\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenAmount\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(BigInt(sellerTokenAmount).toString())\r\n            ));\r\n    }\r\n    // Add the registers\r\n    // R4 provided in input by the seller to identify the transaction from the generated link\r\n    // R5 as a reference of the payment portal\r\n    const byteArray = new text_decoding__WEBPACK_IMPORTED_MODULE_6__[\"TextEncoder\"]().encode(ref);\r\n    const encodedRef = new Uint8Array(byteArray.buffer);\r\n    sellerBoxBuilder.set_register_value(4, ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Constant\"].from_byte_array(encodedRef));\r\n    const ppRegister = new text_decoding__WEBPACK_IMPORTED_MODULE_6__[\"TextEncoder\"]().encode(PP_REF);\r\n    const encodedPpRegister = new Uint8Array(ppRegister.buffer);\r\n    sellerBoxBuilder.set_register_value(5, ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Constant\"].from_byte_array(encodedPpRegister));\r\n    //console.log('R4:', new TextDecoder().decode(sellerBoxBuilder.register_value(4).to_byte_array()));\r\n    //console.log('R5:', new TextDecoder().decode(sellerBoxBuilder.register_value(5).to_byte_array()));\r\n    try {\r\n        outputCandidates.add(sellerBoxBuilder.build());\r\n    } catch (e) {\r\n        console.log(`building error: ${e}`);\r\n        sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\r\n        throw e;\r\n    }\r\n\r\n    // Build the fee output box\r\n    if (feeFloat > 0) {\r\n        const feeStrNano = Math.round((feeFloat * NANOERG_TO_ERG)).toString();\r\n        var feeAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(feeStrNano));\r\n        if (currency == 'SIGUSD') {\r\n            feeAmountBoxValue = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(MIN_ERG_BOX_VALUE.toString()));\r\n        };\r\n        const feeBoxBuilder = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBoxCandidateBuilder\"](\r\n            feeAmountBoxValue,\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Contract\"].pay_to_address(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(feeAddress)),\r\n            creationHeight);\r\n        if (currency == 'SIGUSD') {\r\n            const feeNanoErgToSend = Math.round((feeFloat) * 100);\r\n            feeBoxBuilder.add_token(\r\n                ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenId\"].from_str(\"03faf2cb329f2e90d6d23b58d91bbb6c046aa143261cc21f52fbe2824bfcbf04\"),\r\n                ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TokenAmount\"].from_i64(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"I64\"].from_str(feeNanoErgToSend.toString())\r\n                ));\r\n        }\r\n        try {\r\n            outputCandidates.add(feeBoxBuilder.build());\r\n        } catch (e) {\r\n            console.log(`building error: ${e}`);\r\n            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    // Create the transaction\r\n    const txBuilder = ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].new(\r\n        boxSelection,\r\n        outputCandidates,\r\n        creationHeight,\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"TxBuilder\"].SUGGESTED_TX_FEE(),\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"Address\"].from_base58(changeAddress),\r\n        ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"BoxValue\"].SAFE_USER_MIN());\r\n    const dataInputs = new ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"DataInputs\"]();\r\n    txBuilder.set_data_inputs(dataInputs);\r\n    const tx = Object(_parseUtils__WEBPACK_IMPORTED_MODULE_2__[\"parseUnsignedTx\"])(txBuilder.build().to_json());\r\n    //console.log(`tx: ${JSONBigInt.stringify(tx)}`);\r\n\r\n    const correctTx = Object(_parseUtils__WEBPACK_IMPORTED_MODULE_2__[\"parseUnsignedTx\"])(ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"UnsignedTransaction\"].from_json(json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(tx)).to_json());\r\n    // Put back complete selected inputs in the same order\r\n    correctTx.inputs = correctTx.inputs.map(box => {\r\n        //console.log(`box: ${JSONBigInt.stringify(box)}`);\r\n        const fullBoxInfo = utxos.find(utxo => utxo.boxId === box.boxId);\r\n        return {\r\n            ...fullBoxInfo,\r\n            extension: {}\r\n        };\r\n    });\r\n    //console.log(`correctTx: ${JSONBigInt.stringify(correctTx)}`);\r\n\r\n    // Send transaction for signing\r\n    setStatus(\"Awaiting transaction signing\", \"secondary\");\r\n\r\n    triggerWaitAlert('Awaiting transaction signing', 'Please review the transaction shown in Yoroi and sign it to process the payment.<br/>The transactions on blockchain cannot be reverted nor cancelled.');\r\n\r\n    processTx(correctTx).then(txId => {\r\n        sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.close();\r\n        console.log('[txId]', txId);\r\n        if (txId) {\r\n            displayTxId(txId);\r\n            sweetalert2__WEBPACK_IMPORTED_MODULE_5___default.a.fire({\r\n                title: 'Transaction successfully sent, waiting for it reaches the explorer',\r\n                icon: 'success',\r\n                timer: 10000,\r\n                timerProgressBar: true\r\n            });\r\n        }\r\n    });\r\n    return false;\r\n\r\n}\r\n\r\nasync function getAllUtxos() {\r\n    const filteredUtxos = [];\r\n    const utxos = await ergo.get_utxos();\r\n    for (const utxo of utxos) {\r\n        try {\r\n            ergo_lib_wasm_browser__WEBPACK_IMPORTED_MODULE_0__[\"ErgoBox\"].from_json(json_bigint__WEBPACK_IMPORTED_MODULE_1___default.a.stringify(utxo));\r\n            filteredUtxos.push(utxo);\r\n        } catch (e) {\r\n            logErrorStatus(e, \"[getAllUtxos] UTxO failed parsing:\");\r\n            return null;\r\n        }\r\n    }\r\n    return filteredUtxos;\r\n}\r\n\r\nasync function signTx(txToBeSigned) {\r\n    try {\r\n        return await ergo.sign_tx(txToBeSigned);\r\n    } catch (e) {\r\n        logErrorStatus(e, \"[signTx] Error\");\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function submitTx(txToBeSubmitted) {\r\n    try {\r\n        return await ergo.submit_tx(txToBeSubmitted);\r\n    } catch (e) {\r\n        logErrorStatus(e, \"[submitTx] Error\");\r\n        return null;\r\n    }\r\n}\r\n\r\nasync function processTx(txToBeProcessed) {\r\n    const msg = s => {\r\n        console.log('[processTx]', s);\r\n        setStatus(s, \"secondary\");\r\n    };\r\n    const signedTx = await signTx(txToBeProcessed);\r\n    if (!signedTx) {\r\n        console.error(`No signed transaction found`);\r\n        return null;\r\n    }\r\n    msg(\"Transaction signed - awaiting submission\");\r\n    const txId = await submitTx(signedTx);\r\n    if (!txId) {\r\n        console.log(`No submitted tx ID`);\r\n        return null;\r\n    }\r\n    msg(\"Transaction submitted \");\r\n    return txId;\r\n}\r\n\r\nfunction displayTxId(txId) {\r\n    const status = document.getElementById(\"status\");\r\n    const cr = document.createElement(\"br\");\r\n    const txTracker = document.createElement(\"a\");\r\n    txTracker.appendChild(document.createTextNode(`View transaction in explorer: ${txId}`));\r\n    txTracker.href = `https://explorer.ergoplatform.com/en/transactions/${txId}`;\r\n    txTracker.target = \"_blank\"\r\n    status.appendChild(cr);\r\n    status.appendChild(txTracker);\r\n    status.className = \"alert alert-secondary\";\r\n}\r\n\r\n// return formatted token amount like 6,222,444.420\r\n// amountInt: number of token as provided in utxo (to be divided by 10^decimals)\r\n// decimalsInt: number of decimals of te token\r\nfunction formatTokenAmount(amountInt, decimalsInt) {\r\n    if (decimalsInt > 0) {\r\n        const numberAmount = (Number(amountInt) / Number(Math.pow(10, parseInt(decimalsInt)))).toFixed(parseInt(decimalsInt));\r\n        var str = numberAmount.toString().split(\".\");\r\n        str[0] = str[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        return str.join(\".\");\r\n    } else {\r\n        return amountInt.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");;\r\n    }\r\n}\r\n\r\nfunction formatLongString(str, num) {\r\n    if (str.length > 2 * num) {\r\n        return str.substring(0, num) + \"...\" + str.substring(str.length - num, str.length);\r\n    } else {\r\n        return str;\r\n    }\r\n}\r\n\r\n// INIT page\r\nconst currentLocation = window.location;\r\nif (currentLocation.toString().includes(\"pay.html\")) {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    var parameterValid = true;\r\n    // ERG address\r\n    const address = urlParams.get('address');\r\n    if (address != null && address.length != 51 && address.charAt(0) != '9') {\r\n        setStatus(\"Invalid ERG address\", \"danger\");\r\n        parameterValid = false;\r\n    };\r\n    // Currency\r\n    const currency = urlParams.get('currency').toUpperCase();\r\n    if (currency != 'ERG' && currency != 'SIGUSD') {\r\n        setStatus(\"Invalid currency parameter '\" + currency + \"': Only ERG or SIGUSD are accepted\", \"danger\");\r\n        parameterValid = false;\r\n    };\r\n    // Amount\r\n    const amount = urlParams.get('amount');\r\n    const amountFloat = getAmountFloat(currency, amount);\r\n    console.log(\"amountFloat\", amountFloat);\r\n    if (amountFloat == null || isNaN(amountFloat)) {\r\n        setStatus(\"Invalid amount parameter: \" + amount, \"danger\");\r\n        parameterValid = false;\r\n    };\r\n    // Reference, optional\r\n    const ref = urlParams.get('ref');\r\n    if (parameterValid) {\r\n        loadPaymentPage(address, currency, amount, ref);\r\n        if (typeof ergo_request_read_access === \"undefined\") {\r\n            var msg = \"Yorio ergo dApp connector not found, to use this dApp you need to install the extension \";\r\n            msg += '<a href=\"https://chrome.google.com/webstore/detail/yoroi-nightly/poonlenmfdfbjfeeballhiibknlknepo\" target=\"_blank\">Yoroi nightly</a>.';\r\n            setStatus(msg, \"warning\");\r\n            const sendButton = document.getElementById(\"send-transaction\");\r\n            sendButton.disabled = true;\r\n        } else {\r\n            console.log(\"Yorio ergo dApp found\");\r\n            window.addEventListener(\"ergo_wallet_disconnected\", function (event) {\r\n                const connectWalletButton = document.getElementById(\"connect-wallet\");\r\n                connectWalletButton.value = \"Connect wallet\";\r\n                connectWalletButton.onclick = connectErgoWallet;\r\n                setStatus(\"Ergo wallet disconnected\", \"warning\");\r\n                const container = document.getElementById(\"main\");\r\n                container.addAttribute(\"hidden\");\r\n            });\r\n            connectErgoWallet(address, currency, amount, ref);\r\n        }\r\n    }\r\n} else if (currentLocation.toString().includes(\"voucher.html\")) {\r\n    const queryString = window.location.search;\r\n    const urlParams = new URLSearchParams(queryString);\r\n    const ergAddress = urlParams.get('address');\r\n    if (ergAddress == null) {\r\n        setStatus(\"Provide the ERG address to monitor\", \"secondary\");\r\n    } else {\r\n        if (ergAddress.length != 51 || ergAddress.charAt(0) != '9') {\r\n            setStatus(\"Invalid ERG address\", \"danger\");\r\n        } else {\r\n            setStatus(\"List of the received payments from \" + PP_REF + \" for address <b>\" + ergAddress + \"</b>\", \"secondary\");\r\n            document.getElementById(\"result\").removeAttribute(\"hidden\");\r\n            loadVoucherPage(ergAddress);\r\n        }\r\n    }\r\n}\r\nelse { // generate URL page\r\n    const generateButton = document.getElementById(\"generate-url\");\r\n    generateButton.onclick = generatePaymentURL;\r\n    setStatus(\"Provide the inputs for the payment request URL\", \"secondary\");\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/parseUtils.js":
/*!***************************!*\
  !*** ./src/parseUtils.js ***!
  \***************************/
/*! exports provided: parseUnsignedTx, parseUtxo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseUnsignedTx\", function() { return parseUnsignedTx; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseUtxo\", function() { return parseUtxo; });\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! json-bigint */ \"./node_modules/json-bigint/index.js\");\n/* harmony import */ var json_bigint__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(json_bigint__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n\r\nfunction parseUnsignedTx(str) {\r\n    let json = json_bigint__WEBPACK_IMPORTED_MODULE_0___default.a.parse(str);\r\n    return {\r\n        id: json.id,\r\n        inputs: json.inputs,\r\n        dataInputs: json.dataInputs,\r\n        outputs: json.outputs.map(output => (parseUtxo(output))),\r\n    };\r\n}\r\nfunction parseUtxo(json) {\r\n    return {\r\n        boxId: json.boxId,\r\n        value: json.value.toString(),\r\n        ergoTree: json.ergoTree,\r\n        assets: json.assets.map(asset => ({\r\n            tokenId: asset.tokenId,\r\n            amount: asset.amount.toString(),\r\n        })),\r\n        additionalRegisters: json.additionalRegisters,\r\n        creationHeight: json.creationHeight,\r\n        transactionId: json.transactionId,\r\n        index: json.index\r\n    };\r\n}\r\n\n\n//# sourceURL=webpack:///./src/parseUtils.js?");

/***/ }),

/***/ 0:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///buffer_(ignored)?");

/***/ }),

/***/ 1:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?");

/***/ }),

/***/ 2:
/*!********************************!*\
  !*** ./util.inspect (ignored) ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///./util.inspect_(ignored)?");

/***/ }),

/***/ 3:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///buffer_(ignored)?");

/***/ }),

/***/ 4:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* (ignored) */\n\n//# sourceURL=webpack:///crypto_(ignored)?");

/***/ })

}]);